<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uDI7bnVyoQAAAABJRU5ErkJggg==
</value>
  </data>
</root>